services:
  postgres:
    image: postgres:15
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./postgres/config/pg_hba.conf:/etc/postgresql/pg_hba.conf
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: summit_social
      PGDATA: /var/lib/postgresql/data/pgdata
    command: 
      - "postgres"
      - "-c"
      - "hba_file=/etc/postgresql/pg_hba.conf"
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    command: bash -c "rm -f tmp/pids/server.pid && bundle exec rails server -b '0.0.0.0'"
    volumes:
      - ./frontend:/app
    ports:
      - "3000:3000"
    depends_on:
      - postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_HOST: postgres
      POSTGRES_DB: summit_social
      RAILS_ENV: development

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: ./main
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    environment:
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_HOST: postgres
      DB_NAME: summit_social
      PORT: 8080

volumes:
  pgdata:
