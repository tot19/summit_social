basePath: /
definitions:
  main.Post:
    properties:
      commentsCount:
        type: integer
      content:
        type: string
      date:
        type: string
      id:
        type: integer
      image:
        type: string
      likes:
        type: integer
      poster:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a social media API server.
  title: Summit Social API
  version: "1.0"
paths:
  /post:
    post:
      consumes:
      - application/json
      description: Create a new post with the input payload
      parameters:
      - description: Create post
        in: body
        name: post
        required: true
        schema:
          $ref: '#/definitions/main.Post'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/main.Post'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Create a new post
      tags:
      - posts
  /post/{id}:
    delete:
      description: Delete a post by its ID
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Delete a post by ID
      tags:
      - posts
    get:
      description: Get a post by its ID
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.Post'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Get a post by ID
      tags:
      - posts
    put:
      consumes:
      - application/json
      description: Update an existing post by its ID
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update post
        in: body
        name: post
        required: true
        schema:
          $ref: '#/definitions/main.Post'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.Post'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      summary: Update a post
      tags:
      - posts
  /posts:
    get:
      description: Get a list of all posts
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.Post'
            type: array
      summary: Get all posts
      tags:
      - posts
swagger: "2.0"
